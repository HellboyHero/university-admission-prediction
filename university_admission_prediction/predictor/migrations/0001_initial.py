# Generated by Django 5.1.6 on 2025-03-02 18:19

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('acceptance_rate', models.FloatField()),
                ('min_gre_score', models.IntegerField()),
                ('min_toefl_score', models.IntegerField()),
                ('min_cgpa', models.FloatField()),
                ('ranking', models.IntegerField()),
                ('website', models.URLField()),
                ('courses_offered', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'colleges',
                'ordering': ['ranking'],
            },
        ),
        migrations.CreateModel(
            name='AdmissionPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gre_score', models.IntegerField(help_text='GRE score (260-340)', validators=[django.core.validators.MinValueValidator(260), django.core.validators.MaxValueValidator(340)])),
                ('toefl_score', models.IntegerField(help_text='TOEFL score (0-120)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(120)])),
                ('university_rating', models.IntegerField(help_text='University Rating (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('sop', models.FloatField(help_text='Statement of Purpose Rating (1.0-5.0)', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('lor', models.FloatField(help_text='Letter of Recommendation Rating (1.0-5.0)', validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('cgpa', models.FloatField(help_text='CGPA (0.0-10.0)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('research', models.BooleanField(help_text='Research Experience (Yes/No)')),
                ('admission_chance', models.FloatField(blank=True, help_text='Predicted chance of admission', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recommended_colleges', models.ManyToManyField(blank=True, to='predictor.college')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
